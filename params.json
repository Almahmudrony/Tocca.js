{
  "name": "Tocca.js",
  "tagline": "Super lightweight script (1kb) to detect via Javascript events like 'tap' 'dbltap' 'swipeup' 'swipedown' 'swipeleft' 'swiperight' on any kind of device.",
  "body": "Tocca.js\r\n========\r\n\r\n\r\n[![Build Status][travis-image]][travis-url]\r\n\r\n[![NPM version][npm-version-image]][npm-url]\r\n[![NPM downloads][npm-downloads-image]][npm-url]\r\n\r\n[![MIT License][license-image]][license-url]\r\n\r\n[![Sauce Test Status][saucelabs-image]][saucelabs-url]\r\n\r\nSuper lightweight script ( ~1kB ) to detect via Javascript events like 'tap' 'longtap' 'dbltap' 'swipeup'  'swipedown'  'swipeleft'  'swiperight' on any kind of device.\r\n\r\n<a href=\"http://gianlucaguarini.github.io/Tocca.js/demo-fun.html\" target=\"_blank\">Demo</a>\r\n\r\n## Installation\r\n\r\n### Npm\r\n```bash\r\n$ npm install tocca\r\n```\r\n\r\n### Bower\r\n```\r\n$ bower install Tocca.js -save\r\n```\r\n\r\n## Usage\r\n\r\nInclude the script into your page:\r\n``` html\r\n<script src=\"path/to/Tocca.js\"></script>\r\n```\r\n\r\nOnce you have included Tocca.js you will be able to catch all the new events:\r\n\r\n``` javascript\r\nelm.addEventListener('tap',function(e){});\r\nelm.addEventListener('dbltap',function(e){});\r\nelm.addEventListener('longtap',function(e){});\r\nelm.addEventListener('swipeleft',function(e){});\r\nelm.addEventListener('swiperight',function(e){});\r\nelm.addEventListener('swipeup',function(e){});\r\nelm.addEventListener('swipedown',function(e){});\r\n```\r\n\r\nIt works with jQuery as well:\r\n``` javascript\r\n$(elm).on('tap',function(e,data){});\r\n$(elm).on('dbltap',function(e,data){});\r\n$(elm).on('longtap',function(e,data){});\r\n$(elm).on('swipeleft',function(e,data){});\r\n$(elm).on('swiperight',function(e,data){});\r\n$(elm).on('swipeup',function(e,data){});\r\n$(elm).on('swipedown',function(e,data){});\r\n```\r\n\r\nTocca.js supports also the inline events!\r\n``` html\r\n<div ontap=\"function(e){})\"></div>\r\n<div ondbltap=\"function(e){})\"></div>\r\n<div onlongtap=\"function(e){})\"></div>\r\n<div onswipeleft=\"function(e){})\"></div>\r\n<div onswiperight=\"function(e){})\"></div>\r\n<div onswipeup=\"function(e){})\"></div>\r\n<div onswipedown=\"function(e){})\"></div>\r\n```\r\n\r\n## API and Examples\r\n\r\nAnytime you will use a Tocca.js event the callback function will receive a special event object containing the following properties\r\n\r\n - <code>x</code> { Int }: latest x position of pointer at the end of the event\r\n - <code>y</code> { Int }: latest y position of pointer at the end of the event\r\n - <code>originalEvent</code> { Object }: the original javascript native event that has been triggered\r\n - <code>distance</code>: this property is available only for the swipe events\r\n \t- <code>x</code> { Int }: the x absolute difference between the beginning and the end of the swipe gesture\r\n \t- <code>y</code> { Int }: the y absolute difference between the beginning and the end of the swipe gesture\r\n\r\nExamples:\r\n\r\n``` javascript\r\nelm.addEventListener('dbltap',function (e){\r\n\tconsole.log(e.x);\r\n\tconsole.log(e.y);\r\n});\r\nelm.addEventListener('swipeup',function (e){\r\n\tconsole.log(e.x);\r\n\tconsole.log(e.y);\r\n\tconsole.log(e.distance.x);\r\n\tconsole.log(e.distance.y);\r\n});\r\n\r\n// with jQuery\r\n\r\n$(elm).on('dbltap',function (e,data){\r\n\tconsole.log(data.x);\r\n\tconsole.log(data.y);\r\n});\r\n$(elm).on('swipeup',function (e,data){\r\n\tconsole.log(data.x);\r\n\tconsole.log(data.y);\r\n\tconsole.log(data.distance.x);\r\n\tconsole.log(data.distance.y);\r\n});\r\n```\r\n\r\n\r\nAnyway you can combine Tocca.js with the default javascript touch events:\r\n\r\n - <code>touchmove</code>\r\n - <code>touchstart</code>\r\n - <code>touchend</code>\r\n - <code>touchcancel</code>\r\n\r\nTo disable the default touch behaviours (zoom on double tap, scroll on swipe...) on a certain element via javascript you can always use the following snippet:\r\n\r\n``` javascript\r\nelm.addEventListener('touchmove',function(e){e.preventDefault()});\r\nelm.addEventListener('touchstart',function(e){e.preventDefault()});\r\nelm.addEventListener('touchend',function(e){e.preventDefault()});\r\n```\r\n\r\n\r\n## Configuration\r\n\r\nWhenever you want to configure the plugin events settings you can do that simply specifying two constants before including Tocca.js into the page\r\n\r\n``` html\r\n<script>\r\nvar SWIPE_THRESHOLD = 100, // default value\r\n\tDBL_TAP_THRESHOLD = 200, // range of time in which a dbltap event could be detected,\r\n\tLONG_TAP_THRESHOLD = 1000, // range of time after which a longtap event could be detected\r\n\tTAP_THRESHOLD = 150, // range of time in which a tap event could be detected\r\n\tTAP_PRECISION = 60 / 2, // default value (touch events boundaries)\r\n\tJUST_ON_TOUCH_DEVICES = false, // default value ( decide whether you want to use the Tocca.js events only on the touch devices )\r\n\tIGNORE_JQUERY = false; // default value ( will not use jQuery events, even if jQuery is detected )\r\n</script>\r\n<script src=\"path/to/Tocca.js\"></script>\r\n```\r\n\r\nIn Tocca.js 1.1.0 you can also configure/get the internal options via function:\r\n```js\r\nwindow.tocca({\r\n\tuseJquery: your new option\r\n  swipeThreshold: your new option\r\n  tapThreshold: your new option\r\n  dbltapThreshold: your new option\r\n  longtapThreshold: your new option\r\n  tapPrecision: your new option\r\n  justTouchEvents: your new option\r\n})\r\n\r\nconsole.log(window.tocca()) // will always return the current internal options\r\n```\r\n\r\n## Browser Support\r\n\r\nActually the script has been tested on all the modern browsers but it need a better testing phase over several platforms: Chrome 29+ Firefox 23+ Opera 12+ Safari 5+\r\n\r\nIt works on mobile/tablet browsers and on desktop browsers as well.\r\n\r\nOn the old browsers all the Tocca.js events cannot be triggered.\r\n\r\n## Changelog\r\n\r\n### 1.1.0\r\n\r\n-  added: the possibility to configure via function the internal tocca options\r\n-  added: the `IGNORE_JQUERY` option\r\n\r\n### 1.0.1\r\n\r\n-  fixed: https://github.com/GianlucaGuarini/Tocca.js/issues/37\r\n\r\n### 1.0.0\r\nThanks to [@AndyOGo](https://github.com/AndyOGo) for his help on this release\r\n\r\n-  fixed: #34 #35\r\n-  fixed: more reliable and performant events on the hybrid devices\r\n-  fixed: multiple events dispatched on `tap`\r\n\r\n### 0.2.0\r\n-  added: `longtap` event and the `LONG_TAP_THRESHOLD` variable\r\n-  fixed: inconsistencies and issues across the hybrid devices\r\n\r\n### 0.1.7\r\n-  added: `longtap` event and the `LONG_TAP_THRESHOLD` variable\r\n\r\n### 0.1.5\r\n-  added: support for the inline events\r\n\r\n### 0.1.4\r\n - fixed: `dbltap` https://github.com/GianlucaGuarini/Tocca.js/pull/16\r\n - updated: node devDependecies updated\r\n\r\n### 0.1.3\r\n - fixed: `dbltap` issue https://github.com/GianlucaGuarini/Tocca.js/issues/14\r\n\r\n### 0.1.2\r\n - updated: no more deferred `tap` events, a `tap` event gets triggered immediately if it's in the `TAP_THRESHOLD` time range\r\n - updated: a `tap` event will always come first a `dbltap` event\r\n\r\n### 0.1.1\r\n - updated: better and faster tap events detection\r\n - updated: node devDependecies updated\r\n - added: DBL_TAP_THRESHOLD option\r\n\r\n### 0.1.0\r\n - bugfix: optimizing the support for the microsoft hybrid devices (IE10/IE11)\r\n\r\n### 0.0.8\r\n - 'touchcancel' event removed to fix and android issue on page scroll\r\n\r\n### 0.0.7\r\n - nothing important (just a workaround to fix the tests on the motherfucker Phantomjs)\r\n\r\n### 0.0.6\r\n - bugfix: do not set the mouse event listeners on any touch device and vice versa\r\n - added: new JUST_ON_TOUCH_DEVICES option to block all the Tocca.js events on the no-touch devices\r\n\r\n### 0.0.5\r\n - tap precision option included\r\n\r\n### 0.0.4\r\n - <code>dpltap</code> renamed <code>dbltap</code>\r\n - new demo added demo-fun.html\r\n\r\n### 0.0.3\r\n - Tests added\r\n\r\n### 0.0.2\r\n - Android Bug fix\r\n\r\n\r\n## What does Tocca mean?!\r\n\r\n'Tocca' is the second person singular of the imperative Italian verb 'Toccare' that means to touch.\r\n\r\n[npm-url]: https://npmjs.org/package/tocca\r\n[npm-version-image]: http://img.shields.io/npm/v/tocca.svg?style=flat-square\r\n[npm-downloads-image]: http://img.shields.io/npm/dm/tocca.svg?style=flat-square\r\n\r\n[travis-url]:https://travis-ci.org/GianlucaGuarini/Tocca.js\r\n[travis-image]: https://img.shields.io/travis/GianlucaGuarini/Tocca.js.svg?style=flat-square\r\n\r\n[saucelabs-image]:https://saucelabs.com/browser-matrix/Toccajs.svg\r\n[saucelabs-url]:https://saucelabs.com/u/Toccajs\r\n\r\n[license-url]: LICENSE\r\n[license-image]: http://img.shields.io/badge/license-MIT-000000.svg?style=flat-square\r\n",
  "google": "UA-8059670-3",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}